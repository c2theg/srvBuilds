############################################
#       Christopher Gray
#       christophermjgray@gmail.com
#       https://raw.githubusercontent.com/c2theg/srvBuilds/master/nginx_global_security.conf
#
#       Initial:  1-5-19
#       Updated:  2-21-2022
#       version   0.0.10
############################################
# don't send the nginx version number in error pages and Server header
server_tokens off;

add_header Referrer-Policy "no-referrer" always;

# MIME type sniffing security protection. There are very few edge cases where you wouldn't want this enabled.
add_header X-Content-Type-Options "nosniff" always;

add_header X-Download-Options "noopen" always;
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-Permitted-Cross-Domain-Policies "none" always;
add_header X-Robots-Tag "none" always;

# The X-XSS-Protection header is used by Internet Explorer version 8+. The header instructs IE to enable its inbuilt anti-cross-site scripting filter.
add_header X-XSS-Protection "1; mode=block" always;

# The X-Frame-Options header indicates whether a browser should be allowed to render a page within a frame or iframe.
add_header  X-Frame-Options SAMEORIGIN;  # DENY

# with Content Security Policy (CSP) enabled(and a browser that supports it(http://caniuse.com/#feat=contentsecuritypolicy),
# you can tell the browser that it can only download content from the domains you explicitly allow
# http://www.html5rocks.com/en/tutorials/security/content-security-policy/
# https://www.owasp.org/index.php/Content_Security_Policy
# There is website that helps you generate a policy here http://cspisawesome.com/
# I need to change our application code so we can increase security by disabling 'unsafe-inline' 'unsafe-eval'
# directives for css and js(if you have inline css or js, you will need to keep it too).

#--- https://www.html5rocks.com/en/tutorials/security/content-security-policy/#inline-code-considered-harmful ---
#add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ajax.googleapis.com https://apis.google.com https://code.jquery.com https://cdnjs.cloudflare.com https://stackpath.bootstrapcdn.com https://ssl.google-analytics.com https://connect.facebook.net; img-src 'self' https://ssl.google-analytics.com https://s-static.ak.facebook.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://themes.googleusercontent.com; frame-src https://www.facebook.com https://s-static.ak.facebook.com; object-src 'none'";
#report-uri /cspReportParser.php;

#add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ssl.google-analytics.com https://assets.zendesk.com https://connect.facebook.net; img-src 'self' https://ssl.google-analytics.com https://s-static.ak.facebook.com https://assets.zendesk.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://assets.zendesk.com; font-src 'self' https://themes.googleusercontent.com; frame-src https://assets.zendesk.com https://www.facebook.com https://s-static.ak.facebook.com https://tautt.zendesk.com; object-src 'none'";
add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval' *.youtube.com maps.gstatic.com *.googleapis.com *.google-analytics.com https://connect.facebook.net https://cdnjs.cloudflare.com https://code.jquery.com https://cdn.datatables.net https://code.highcharts.com https://projecthoneypot.org; frame-src 'self' *.youtube.com *.facebook.com s-static.ak.facebook.com https://cdnjs.cloudflare.com https://code.jquery.com https://cdn.datatables.net https://code.highcharts.com https://projecthoneypot.org; object-src 'self'";

add_header X-Powered-By "ASP.NET"; #-- Haha, a little deception never hurt anyone  ¯\_(ツ)_/¯
add_header X-Robots-Tag none;
add_header X-UA-Compatible "IE=Edge,chrome=1";

add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

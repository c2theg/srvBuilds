---
# Run with ansible-playbook <filename> -k
# make sure to add IPaddress of machines you want to manage to /etc/ansible/hosts first
#
#  Make sure to run the pb-init.yml file before running any other playbooks.
#  It will install all dependencies 
#
#  By: 
#  _____ _          _     _              _                 _____                  
# /  __ \ |        (_)   | |            | |               |  __ \                  Â®
# | /  \/ |__  _ __ _ ___| |_ ___  _ __ | |__   ___ _ __  | |  \/_ __ __ _ _   _  
# | |   | '_ \| '__| / __| __/ _ \| '_ \| '_ \ / _ \ '__| | | __| '__/ _` | | | | 
# | \__/\ | | | |  | \__ \ || (_) | |_) | | | |  __/ |    | |_\ \ | | (_| | |_| | 
#  \____/_| |_|_|  |_|___/\__\___/| .__/|_| |_|\___|_|     \____/_|  \__,_|\__, | 
#                                 | |                                       __/ | 
#                                 |_|                                      |___/  
#  https://github.com/c2theg
#  Copyright (c) 2001-2018
# 
#
#    Version: 0.0.1
#    Updated: 8/15/18

- hosts: all
  gather_facts: False
  remote_user: ubuntu
  become: yes
  become_user: root
  become_method: sudo

  tasks:
    - name: Install Python 2
      raw: test -e /usr/bin/python || (apt-get update && apt-get install -y python)

    - name: Fancy way of doing authorized_keys
      authorized_key: user=root
                      exclusive=no
                      key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

    #-- If you dont want to use the module 'authorized_key', then run the lines below --
    #- name: Create /root/.ssh
    #  file: path=/root/.ssh state=directory mode=0700

    #- name: Create /root/.ssh/authorized_keys from our local ssh pubkey
    #  lineinfile: dest=/root/.ssh/authorized_keys line="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

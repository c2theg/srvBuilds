# http://nginx.org/en/docs/http/load_balancing.html

http {
    server {
        listen 80;
        server_name www.domain.com;

        location / {
            proxy_pass http://myapp1;
            proxy_set_header Host $host; # Rewrite the 'Host' header to the value in the client request or primary server name
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Accept-Encoding "";
            proxy_redirect http://staging.example.com/ http://$host/;
            
            # Replace any references inline to staging.example.com
            #sub_filter http://staging.example.com/ /;
            #sub_filter_once off;            
        }
    }
    
    upstream myapp1 {
        least_conn;
        ip_hash;
        keepalive 20; # maintain a maximum of 20 idle connections to each upstream server
        server 192.168.1.1:80 weight=2 fail_timeout=5s max_fails=5;
        #server 192.168.1.2:80 fail_timeout=5s max_fails=5;
        #server srv1.example.com:80 weight=3;
    }
    
    #--------------------- SSL / TLS 443 --------------------------------------------------------------------------------
    
    server {
        listen 443 ssl;
        server_name www.domain.com;
        
        ssl_certificate     /etc/nginx/ssl/company.com.crt;
        ssl_certificate_key /etc/nginx/ssl/company.com.key;
        ssl_protocols       TLSv1.2;
        
        location / {
            proxy_pass http://myapp-sec;
            proxy_set_header Host $host; # Rewrite the 'Host' header to the value in the client request or primary server name
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Accept-Encoding "";
            proxy_redirect http://staging.example.com/ http://$host/;
            
            # Replace any references inline to staging.example.com
            #sub_filter http://staging.example.com/ /;
            #sub_filter_once off;            
        }
    }
    
    upstream myapp-sec {
        least_conn;
        ip_hash;
        keepalive 20; # maintain a maximum of 20 idle connections to each upstream server
        server 192.168.1.1:80 weight=2 fail_timeout=5s max_fails=5;
        #server 192.168.1.2:80 fail_timeout=5s max_fails=5;
        #server srv1.example.com:80 weight=3;
    }    
}
